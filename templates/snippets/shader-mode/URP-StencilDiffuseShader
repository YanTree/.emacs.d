# -*- mode: snippet -*-
# name: URP-StencilDiffuseShader
# key: URPStencilDiffuseShader
# --
// 1. Should output color, so first to disable ColorMask(Delete or comment)
// 2. ZWrite: The `GO' should shadow `Mask', so `ZWrite On'
// 3. Render queue, after all stencil mask render complete, so `Queue' to `AlphaTest + 50'
// âš  Don't hand setting render queue on shader with urp
Shader "Stencil/Diffuse"
{
    Properties
    {
        [MainColor] _BaseColor("Base Color", Color) = (1.0, 1.0, 1.0, 1.0)
        [MainTexture] _BaseMap("Base Map", 2D) = "white" {}

        [Header(Stencil)][Space(5)]
        [IntRange]_Stencil ("Stencil Ref", Range(0,255)) = 0
        [Enum(UnityEngine.Rendering.CompareFunction)]_StencilComp ("Stencil Comparison", Float) = 8
        [IntRange]_StencilReadMask ("Stencil Read Mask", Range(0,255)) = 255
        [IntRange]_StencilWriteMask ("Stencil Write Mask", Range(0,255)) = 255
        [Enum(UnityEngine.Rendering.StencilOp)]_StencilPass ("Stencil Pass", Float) = 0
        [Enum(UnityEngine.Rendering.StencilOp)]_StencilFail ("Stencil Fail", Float) = 0
        [Enum(UnityEngine.Rendering.StencilOp)]_StencilZFail ("Stencil ZFail", Float) = 0

        [Header(RenderState)][Space(5)]
        [Enum(UnityEngine.Rendering.CullMode)]_CullMode ("CullMode", float) = 2
        [Enum(Off, 0, On, 1)]_ZWriteMode ("ZWriteMode", float) = 1
    }

    SubShader
    {
        // SubShader Tags define when and under which conditions a SubShader block or
        // a pass is executed.
        Tags
        {
            "RenderType" = "Opaque"
            "RenderPipeline" = "UniversalPipeline"
            "UniversalMaterialType" = "Lit"
            "IgnoreProjector" = "True"
        }

        Pass
        {
            Name "StencilMask"
            Tags { "LightMode" = "UniversalForward" }

            // Stencil
            Stencil
            {
                Ref [_Stencil]
                Comp [_StencilComp]
                ReadMask [_StencilReadMask]
                WriteMask [_StencilWriteMask]
                Pass [_StencilPass]
                Fail [_StencilFail]
                ZFail [_StencilZFail]
            }
            // Renderstate
            Cull [_CullMode]
            ZWrite [_ZWriteMode]
            // Should to disable ColorMask
            // ColorMask 0
            // The HLSL code block. Unity SRP uses the HLSL language.
            HLSLPROGRAM
            #pragma vertex vert
            #pragma fragment frag

            #include "Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl"

            // Texture/Sampler parameters
            TEXTURE2D(_BaseMap);                 SAMPLER(sampler_BaseMap);
            // CUBFFER for vector parameters
            CBUFFER_START(UnityPerMaterial)
            half4   _BaseColor;
            float4 _BaseMap_ST;
            CBUFFER_END

            struct Attributes
            {
                float4 positionOS   : POSITION;
                float2 texcoord     : TEXCOORD0;
            };

            struct Varyings
            {
                float4 positionHCS  : SV_POSITION;
                half4  uv           : TEXCOORD0;
            };

            Varyings vert(Attributes input)
            {
                Varyings output    = (Varyings)0;

                output.positionHCS = TransformObjectToHClip(input.positionOS.xyz);
                output.uv.xy       = TRANSFORM_TEX(input.texcoord, _BaseMap);

                return output;
            }

            // The fragment shader definition.
            half4 frag(Varyings input) : SV_Target
            {
                half4 color = SAMPLE_TEXTURE2D(_BaseMap, sampler_BaseMap, input.uv.xy);
                return color * _BaseColor;
            }
            ENDHLSL
        }
    }
    FallBack "Hidden/Universal Render Pipeline/FallbackError"
}
